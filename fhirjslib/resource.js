// Generated by CoffeeScript 1.9.1
var assert, gettype, toJson, utils;

utils = require('./utils');

gettype = utils.type;

toJson = function(resource) {
  if (gettype(resource) === 'string') {
    return resource;
  } else if (gettype(resource) === 'object') {
    return JSON.stringify(resource);
  }
};

assert = function(pred, mess) {
  if (pred == null) {
    throw mess;
  }
};

exports.create = function(arg) {
  var baseUrl, error, http, resource, success, type;
  baseUrl = arg.baseUrl, http = arg.http, resource = arg.resource, success = arg.success, error = arg.error;
  type = resource.resourceType;
  assert(type, 'resourceType should be present');
  return http({
    method: 'POST',
    url: baseUrl + "/" + type,
    data: toJson(resource),
    success: function(data, status, headers, config) {
      var uri;
      uri = headers('Content-Location');
      return success(uri, config);
    },
    error: error
  });
};

exports.validate = function(arg) {
  var baseUrl, error, http, resource, success, type;
  baseUrl = arg.baseUrl, http = arg.http, resource = arg.resource, success = arg.success, error = arg.error;
  type = resource.resourceType;
  assert(resource.resourceType, 'resourceType should be present');
  return http({
    method: 'POST',
    url: baseUrl + "/" + type + "/_validate",
    data: toJson(resource),
    success: function(data, status, headers, config) {
      return success(data, config);
    },
    error: error
  });
};

exports.read = function(arg) {
  var baseUrl, error, http, id, resourceType, success;
  baseUrl = arg.baseUrl, http = arg.http, resourceType = arg.resourceType, id = arg.id, success = arg.success, error = arg.error;
  return http({
    method: 'GET',
    url: utils.absoluteUrl(baseUrl, resourceType + "/" + id),
    success: function(data, status, headers, config) {
      return success(data, config);
    },
    error: error
  });
};

exports.update = function(arg) {
  var baseUrl, error, http, resource, success, url;
  baseUrl = arg.baseUrl, http = arg.http, resource = arg.resource, success = arg.success, error = arg.error;
  url = utils.absoluteUrl(baseUrl, resource.resourceType + "/" + resource.id);
  return http({
    method: 'PUT',
    url: url,
    data: toJson(resource),
    success: function(data, status, headers, config) {
      var uri;
      uri = headers('Content-Location');
      return success(uri, config);
    },
    error: error
  });
};

exports["delete"] = function(arg) {
  var baseUrl, error, http, resource, success, url;
  baseUrl = arg.baseUrl, http = arg.http, resource = arg.resource, success = arg.success, error = arg.error;
  url = utils.absoluteUrl(baseUrl, resource.resourceType + "/" + resource.id);
  return http({
    method: 'DELETE',
    url: url,
    success: function(data, status, headers, config) {
      return success(data, config);
    },
    error: error
  });
};

exports.vread = function(arg) {
  var baseUrl, http;
  baseUrl = arg.baseUrl, http = arg.http;
  return console.log('TODO');
};
