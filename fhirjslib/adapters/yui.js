// Generated by CoffeeScript 1.9.1
var adapter, auth, merge, mkFhir, searchByPatient, searchResultsAsGraph, utils, yui;

mkFhir = require('../fhir');

merge = require('merge');

utils = require('../utils');

auth = require('../middlewares/httpAuthentication');

searchByPatient = require('../middlewares/searchByPatient');

searchResultsAsGraph = require('../middlewares/searchResultsAsGraph');

yui = YUI();

adapter = {
  http: function(q) {
    return yui.use('io', function(Y) {
      q = merge(true, q);
      q.headers = q.headers || {};
      q.headers["Accept"] = "application/json";
      q.headers["Content-Type"] = "application/json; charset=utf-8";
      q.data = q.data || q.params;
      q.on = {
        success: function(id, data, args) {
          var fn;
          fn = function(headerName) {
            return data.getResponseHeader(headerName);
          };
          return q.success(JSON.parse(data.responseText), data.status, fn);
        },
        failure: function(id, args) {
          return q.error(null, args);
        }
      };
      return Y.io(q.url, q);
    });
  }
};

module.exports = function(config) {
  var defaultMiddlewares, fhir, middlewares, ret;
  defaultMiddlewares = {
    http: [auth],
    search: [searchByPatient, searchResultsAsGraph]
  };
  middlewares = utils.mergeLists(config.middlewares, defaultMiddlewares);
  config = merge(true, config, {
    middlewares: middlewares
  });
  fhir = mkFhir(config, adapter);
  ret = ["search", "conformance", "profile", "transaction", "history", "create", "read", "update", "delete", "vread", "resolve"].reduce((function(acc, v) {
    acc[v] = fhir[v];
    return acc;
  }), {});
  ret.resolveSync = fhir.resolveSync;
  return ret;
};
