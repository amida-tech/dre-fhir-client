// Generated by CoffeeScript 1.9.1
var $, adapter, auth, merge, mkFhir, searchByPatient, searchResultsAsGraph, utils;

mkFhir = require('../fhir');

merge = require('merge');

utils = require('../utils');

auth = require('../middlewares/httpAuthentication');

searchByPatient = require('../middlewares/searchByPatient');

searchResultsAsGraph = require('../middlewares/searchResultsAsGraph');

merge = require('merge');

$ = jQuery;

adapter = {
  http: function(q) {
    var a;
    a = $.ajax({
      type: q.method,
      url: q.url,
      headers: q.headers,
      dataType: "json",
      contentType: "application/json",
      data: q.data || q.params
    });
    if (q.success) {
      a.done(function(data, status, xhr) {
        return q.success(data, status, xhr.getResponseHeader);
      });
    }
    if (q.error) {
      return a.fail(function() {
        return q.error.call(null, arguments);
      });
    }
  }
};

module.exports = function(config) {
  var defaultMiddlewares, defer, fhir, middlewares;
  defaultMiddlewares = {
    http: [auth],
    search: [searchByPatient, searchResultsAsGraph]
  };
  middlewares = utils.mergeLists(config.middlewares, defaultMiddlewares);
  config = merge(true, config, {
    middlewares: middlewares
  });
  fhir = mkFhir(config, adapter);
  defer = function(fname) {
    var fn;
    fn = fhir[fname];
    return function(args) {
      var ret;
      ret = $.Deferred();
      args.success = ret.resolve;
      args.error = ret.reject;
      fn(args);
      return ret;
    };
  };
  return ["search", "conformance", "document", "profile", "transaction", "history", "create", "read", "update", "delete", "vread", "resolve"].reduce((function(acc, v) {
    acc[v] = defer(v);
    return acc;
  }), {
    "resolveSync": fhir["resolveSync"]
  });
};
